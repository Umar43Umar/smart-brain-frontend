{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n// import Clarifai from 'clarifai';\n\n// const app = new Clarifai.App({\n//   apiKey: '851885a104204a2191f730b890d7e6bf'\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = '851885a104204a2191f730b890d7e6bf';\n  const USER_ID = 'nzxs15syr1vg';\n  const APP_ID = 'Myfirstapplication';\n  // const MODEL_ID = 'face-detection';    \n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      // app.models.predict('face-detection', this.state.input)\n      fetch(`https://api.clarifai.com/v2/models/face-detection/outputs`, returnClarifaiRequestOptions(this.state.input)).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: {\n          position: \"fixed\",\n          zIndex: -1,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","FaceRecognition","Signin","Register","Logo","Rank","ParticlesBg","ImageLinkForm","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","route","isSignedIn","render","className","children","type","bg","position","zIndex","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Lenovo/Desktop/smartbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n// import Clarifai from 'clarifai';\n\n// const app = new Clarifai.App({\n//   apiKey: '851885a104204a2191f730b890d7e6bf'\n// });\nconst returnClarifaiRequestOptions = (imageUrl) =>{\n  const PAT = '851885a104204a2191f730b890d7e6bf';\n  const USER_ID = 'nzxs15syr1vg';       \n  const APP_ID = 'Myfirstapplication';\n  // const MODEL_ID = 'face-detection';    \n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions\n}\n\n      // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name : '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) =>{\n    this.setState({user: {\n      id: data.id,\n      name : data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box : box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});    \n    // app.models.predict('face-detection', this.state.input)\n    fetch(`https://api.clarifai.com/v2/models/face-detection/outputs`, returnClarifaiRequestOptions(this.state.input))\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, { entries:count }))\n            })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"circle\" bg={{position: \"fixed\", zIndex: -1, top: 0, left: 0, right: 0, bottom: 0}} />\n        <Navigation isSignedIn={this.state.isSignedIn}onRouteChange={this.onRouteChange}/>\n        {this.state.route === 'home'\n          ? <div>\n              <Logo />   \n              <Rank name={this.state.user.name} entries={this.state.user.entries} /> \n              <ImageLinkForm \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n            </div>\n          :(\n            this.state.route === 'signin'\n            ? <Signin  loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}